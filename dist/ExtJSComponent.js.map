{"version":3,"sources":["../src/ExtJSComponent.js"],"names":["l","Component","Children","cloneElement","EXTRenderer","union","isEqual","capitalize","cloneDeepWith","renderWhenReady","globalRoot","count","ExtJSComponent","element","cmp","el","reactProps","reactChildren","reactElement","_getReactStuff","rawConfigs","_getConfig","$createdByExtReact","isRootContainer","ExtReactRoot","extJSClass","target","xtype","rawConfig","componentWillMount","componentDidMount","_mountNode","createContainer","updateContainer","componentDidUpdate","prevProps","prevState","componentWillUnmount","render","children","undefined","prop","props","config","key","substr","event","toLowerCase","listeners","console","warn","_ensureResponsivePlugin","Ext","isClassic","root","document","getElementsByClassName","renderTo","extJSConfig","responsiveConfig","plugins","Array","isArray","indexOf","push","resposive","responsive","getHostNode","getPublicInstance","_applyDefaults","defaults","map","child","type","prototype","_propForChildElement","item","rel","name","isAssignableFrom","CLASS_CACHE","Button","Menu","array","ToolTip","Column","CellBase","value","_cloneConfig","WidgetCell","Dialog","Field","initialConfig","xclass","$className","_eventNameForProp","propName","match","slice","_createConfig","includeEvents","_cloneProps","hasOwnProperty","eventName","Object","assign","replace","Base","_rushProps","oldProps","newProps","rushConfigs","__ExtReactUpdateConfigsBeforeChildren","oldConfigs","newConfigs","_applyProps","keys","oldValue","newValue","_replaceEvent","setter","_setterFor","ExtReactSettings","debug","log","oldHandler","newHandler","un","on","_capitalize","_getterFor","str","_precacheNode","_flags","Flags","hasCachedChildNodes","precacheNode","_doPrecacheNode","single","dom","_extCmp","_toReactChildIndex","n","items","found","i","length","_toArrayConfigIndex","indexInChildren","forEach","propForChild","_mergeConfig","index","isArrayDelete","$ExtReactConfig","getter","currentValue","filter","splice","concat","_ignoreChildrenOrder","_ExtReactIgnoreOrder","FitLayout","layout","TabPanel","wrapDOMElement","node","contentEl","cls","DOMLazyTree","insertTreeBefore","createElement","HTMLElement"],"mappings":";;;AAAA;AACA,SAASA,CAAT,QAAkB,SAAlB,C,CACA;;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,YAA9B,QAAkD,OAAlD;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAOC,aAAP,MAA0B,sBAA1B;AACA,SAASC,eAAT,QAAgC,IAAhC;AAEA,SAASC,UAAT,QAA2B,SAA3B;AAEA,IAAIC,KAAK,GAAG,CAAZ;AAEA,WAAaC,cAAb;AAAA;AAAA;AAAA;;AAEE,0BAAYC,OAAZ,EAAqB;AAAA;;AACnB,kCAAMA,OAAN;AACA,UAAKC,GAAL,GAAW,IAAX;AACA,UAAKC,EAAL,GAAU,IAAV;AAEA,UAAKC,UAAL,GAAkB,EAAlB;AACA,UAAKC,aAAL,GAAqB,EAArB;AACA,UAAKC,YAAL,GAAoB,EAApB;;AACA,UAAKC,cAAL,CAAoBN,OAApB;;AAEA,UAAKO,UAAL,GAAkB,MAAKC,UAAL,EAAlB;AACA,UAAKD,UAAL,CAAgBE,kBAAhB,GAAqC,IAArC;;AAEA,QAAG,MAAKC,eAAR,EAAyB;AACvB,YAAKH,UAAL,CAAgBI,YAAhB,GAA+B,IAA/B;AACA,YAAKV,GAAL,GAAW,IAAI,MAAKW,UAAT,CAAoB,MAAKL,UAAzB,CAAX;AACApB,MAAAA,CAAC,iDAA+C,MAAK0B,MAApD,iBAAsE,MAAKC,KAA3E,wCAAqH,MAAKC,SAA1H,EAAqI,MAAKd,GAA1I,wDAAD;AACD,KAJD,MAKK;AACHd,MAAAA,CAAC,oDAAkD,MAAK0B,MAAvD,iBAAyE,MAAKC,KAA9E,8BAA8G,MAAKC,SAAnH,wDAAD;AACD;;AApBkB;AAqBpB;;AAvBH;;AAAA,SAyBEC,kBAzBF,iCAyBuB;AACnB7B,IAAAA,CAAC,sCAAD;AACD,GA3BH;;AAAA,SA6BE8B,iBA7BF,gCA6BsB;AAClB9B,IAAAA,CAAC,kDAAgD,KAAK0B,MAArD,wCAAD;AACA,SAAKK,UAAL,GAAkB3B,WAAW,CAAC4B,eAAZ,CAA4B,KAAKlB,GAAjC,CAAlB,CAFkB,CAGlB;;AACAd,IAAAA,CAAC,mGAAkG,KAAKiB,aAAvG,EAAqH,KAAKc,UAA1H,CAAD;AACA3B,IAAAA,WAAW,CAAC6B,eAAZ,CAA4B,KAAKhB,aAAjC,EAAgD,KAAKc,UAArD,EAAiE,IAAjE;AACD,GAnCH;;AAAA,SAqCEG,kBArCF,+BAqCqBC,SArCrB,EAqCgCC,SArChC,EAqC2C;AACvC,QAAI,KAAKb,eAAT,EAA0B;AACxBvB,MAAAA,CAAC,qFAAmF,KAAK0B,MAAxF,CAAD;AACAtB,MAAAA,WAAW,CAAC6B,eAAZ,CAA4B,KAAKhB,aAAjC,EAAgD,KAAKc,UAArD,EAAiE,IAAjE;AACD;AACF,GA1CH;;AAAA,SA4CEM,oBA5CF,mCA4CyB;AACrBrC,IAAAA,CAAC,uFAAqF,KAAK0B,MAA1F,CAAD;AACAtB,IAAAA,WAAW,CAAC6B,eAAZ,CAA4B,IAA5B,EAAkC,KAAKF,UAAvC,EAAmD,IAAnD;AACD,GA/CH;;AAAA,SAiDEO,MAjDF,qBAiDW;AACPtC,IAAAA,CAAC,CAAC,QAAD,CAAD;AACA,WAAO,IAAP;AACD,GApDH;;AAAA,SAsDEmB,cAtDF,2BAsDiBN,OAtDjB,EAsD0B;AACtB;AACA,QAAIA,OAAO,CAAC0B,QAAR,IAAoBC,SAApB,IAAiC3B,OAAO,CAAC0B,QAAR,IAAoB,KAAzD,EAAiE;AAC/D,WAAK,IAAIE,IAAT,IAAiB5B,OAAjB,EAA0B;AACxB,YAAI4B,IAAI,IAAI,UAAZ,EAAwB;AACtB,eAAKzB,UAAL,CAAgByB,IAAhB,IAAwB5B,OAAO,CAAC4B,IAAD,CAA/B;AACD;AACF;AACF,KAND,MAOK;AACH,WAAKxB,aAAL,GAAqBJ,OAAO,CAAC0B,QAA7B;;AACA,UAAI1B,OAAO,CAAC6B,KAAR,IAAiBF,SAArB,EAAgC;AAC9B,aAAK,IAAIC,IAAT,IAAiB5B,OAAjB,EAA0B;AACxB,cAAI4B,IAAI,IAAI,UAAZ,EAAwB;AACtB,iBAAKzB,UAAL,CAAgByB,IAAhB,IAAwB5B,OAAO,CAAC4B,IAAD,CAA/B;AACD;AACF;AACF,OAND,MAOK;AACH,aAAKzB,UAAL,GAAkBH,OAAO,CAAC6B,KAA1B;AACD;AACF;;AACD,SAAKxB,YAAL,CAAkBwB,KAAlB,GAA0B,KAAK1B,UAA/B;AACA,SAAKE,YAAL,CAAkBqB,QAAlB,GAA6B,KAAKtB,aAAlC;AACD,GA9EH;;AAAA,SAgFEI,UAhFF,yBAgFe;AACX,QAAIsB,MAAM,GAAG,EAAb;AACAA,IAAAA,MAAM,CAAChB,KAAP,GAAe,KAAKA,KAApB;AACA,QAAIe,KAAK,GAAG,KAAK1B,UAAjB;;AACA,SAAK,IAAI4B,GAAT,IAAgBF,KAAhB,EAAuB;AACrB;AACA,UAAGE,GAAG,CAACC,MAAJ,CAAW,CAAX,EAAa,CAAb,MAAoB,IAAvB,EAA6B;AAC3B,YAAIH,KAAK,CAACE,GAAD,CAAL,IAAcJ,SAAlB,EAA6B;AAC3B,cAAIM,KAAK,GAAGF,GAAG,CAACC,MAAJ,CAAW,CAAX,EAAcE,WAAd,EAAZ;;AACA,cAAIJ,MAAM,CAACK,SAAP,IAAoBR,SAAxB,EAAmC;AACjCG,YAAAA,MAAM,CAACK,SAAP,GAAmB,EAAnB;AACD;;AACDL,UAAAA,MAAM,CAACK,SAAP,CAAiBF,KAAjB,IAA0BJ,KAAK,CAACE,GAAD,CAA/B,CAL2B,CAM3B;AACD,SAPD,MAQK;AACHK,UAAAA,OAAO,CAACC,IAAR,CAAa,kBAAkBN,GAAlB,GAAwB,uBAArC;AACD;AACF,OAZD,MAcK;AACHD,QAAAA,MAAM,CAACC,GAAD,CAAN,GAAcF,KAAK,CAACE,GAAD,CAAnB;AAED;AACF;;AAED,QAAID,MAAM,CAAC,WAAD,CAAN,IAAuBH,SAA3B,EAAsC;AACpCG,MAAAA,MAAM,CAAC,KAAD,CAAN,GAAgBA,MAAM,CAAC,KAAD,CAAN,GAAgB,GAAhB,GAAsBA,MAAM,CAAC,WAAD,CAA5C;AACD;;AACD,SAAKQ,uBAAL,CAA6BR,MAA7B;;AAEA,QAAI,KAAKpB,eAAT,EAA0B;AACxB,UAAIoB,MAAM,CAAC,QAAD,CAAN,IAAoBH,SAAxB,EAAmC;AACjCG,QAAAA,MAAM,CAAC,QAAD,CAAN,GAAmB,KAAnB;;AACA,YAAIA,MAAM,CAAC,KAAD,CAAN,IAAiBH,SAArB,EAAgC;AAC9BG,UAAAA,MAAM,CAAC,KAAD,CAAN,GAAgBA,MAAM,CAAC,KAAD,CAAN,GAAgB,GAAhB,GAAsB,cAAtC;AACD,SAFD,MAGK;AACHA,UAAAA,MAAM,CAAC,KAAD,CAAN,GAAgB,cAAhB;AACD;AACF;;AACD,UAAIS,GAAG,CAACC,SAAR,EAAmB;AACjBV,QAAAA,MAAM,CAAC,QAAD,CAAN,GAAmB,MAAnB;AACAA,QAAAA,MAAM,CAAC,OAAD,CAAN,GAAkB,MAAlB;AACA,YAAIW,IAAI,GAAGC,QAAQ,CAACC,sBAAT,CAAgC,WAAhC,EAA6C,CAA7C,CAAX;AACAb,QAAAA,MAAM,CAACc,QAAP,GAAkBH,IAAlB;AACD,OALD,MAMK;AACH,YAAIA,IAAI,GAAGC,QAAQ,CAACC,sBAAT,CAAgC,oBAAhC,EAAsD,CAAtD,CAAX;;AACA,YAAGF,IAAI,IAAId,SAAX,EAAsB;AACpBc,UAAAA,IAAI,GAAG5C,UAAU,CAACC,KAAD,CAAjB;AACAA,UAAAA,KAAK;AACLgC,UAAAA,MAAM,CAAC,QAAD,CAAN,GAAmB,MAAnB;AACAA,UAAAA,MAAM,CAAC,OAAD,CAAN,GAAkB,MAAlB;AACD,SALD,MAMK;AACHA,UAAAA,MAAM,CAAC,YAAD,CAAN,GAAuB,IAAvB;AACD;;AACDA,QAAAA,MAAM,CAACc,QAAP,GAAkBH,IAAlB;AACD;;AACD,WAAKI,WAAL,GAAmBf,MAAnB;AACD;;AACD,WAAOA,MAAP;AACD,GA/IH;;AAAA,SAiJEQ,uBAjJF,oCAiJ0BR,MAjJ1B,EAiJkC;AAC9B,QAAIA,MAAM,CAACgB,gBAAX,EAA6B;AAAA,UACnBC,OADmB,GACPjB,MADO,CACnBiB,OADmB;;AAG3B,UAAIA,OAAO,IAAI,IAAf,EAAqB;AACnBjB,QAAAA,MAAM,CAACiB,OAAP,GAAiB,YAAjB;AACD,OAFD,MAEO,IAAIC,KAAK,CAACC,OAAN,CAAcF,OAAd,KAA0BA,OAAO,CAACG,OAAR,CAAgB,YAAhB,MAAkC,CAAC,CAAjE,EAAoE;AACzEH,QAAAA,OAAO,CAACI,IAAR,CAAa,YAAb;AACD,OAFM,MAEA,IAAI,OAAOJ,OAAP,KAAmB,QAAvB,EAAiC;AACtC,YAAIA,OAAO,KAAK,YAAhB,EAA8B;AAC5BjB,UAAAA,MAAM,CAACiB,OAAP,GAAiB,CAACA,OAAD,EAAU,YAAV,CAAjB;AACH;AACA,OAJM,MAIA,IAAI,CAACA,OAAO,CAACK,SAAb,EAAwB;AAC7BL,QAAAA,OAAO,CAACM,UAAR,GAAqB,IAArB;AACD;AACF;AACF,GAjKH;AAmKE;;;;;AAnKF,SAsKEC,WAtKF,0BAsKgB;AACZ,WAAO,KAAKpD,EAAZ;AACD,GAxKH;AA0KE;;;;;AA1KF,SA6KEqD,iBA7KF,gCA6KsB;AAClB,WAAO,KAAKtD,GAAZ;AACD,GA/KH;;AAAA,SAiLEuD,cAjLF,iCAiLyC;AAAA,QAAtBC,QAAsB,QAAtBA,QAAsB;AAAA,QAAZ/B,QAAY,QAAZA,QAAY;;AACnC,QAAI+B,QAAJ,EAAc;AACV,aAAOpE,QAAQ,CAACqE,GAAT,CAAahC,QAAb,EAAuB,UAAAiC,KAAK,EAAI;AACnC,YAAIA,KAAK,CAACC,IAAN,CAAWC,SAAX,YAAgC9D,cAApC,EAAoD;AAChD,iBAAOT,YAAY,CAACqE,KAAD,eAAaF,QAAb,EAA0BE,KAAK,CAAC9B,KAAhC,EAAnB;AACH,SAFD,MAEO;AACH,iBAAO8B,KAAP;AACH;AACJ,OANM,CAAP;AAOH,KARD,MAQO;AACH,aAAOjC,QAAP;AACH;AACJ,GA7LH;AA+LE;;;;;;;AA/LF,SAoMEoC,oBApMF,iCAoMuBC,IApMvB,EAoM6B;AACvB,QAAIA,IAAI,CAACjC,MAAL,IAAeiC,IAAI,CAACjC,MAAL,CAAYkC,GAA/B,EAAoC;AAChC,UAAI,OAAOD,IAAI,CAACjC,MAAL,CAAYkC,GAAnB,KAA2B,QAA/B,EAAyC;AACrC,eAAO;AAAEC,UAAAA,IAAI,EAAEF,IAAI,CAACjC,MAAL,CAAYkC;AAApB,SAAP;AACH,OAFD,MAEO;AACH,eAAOD,IAAI,CAACjC,MAAL,CAAYkC,GAAnB;AACH;AACJ;;AAPsB,QASfpD,UATe,GASA,IATA,CASfA,UATe;;AAWvB,QAAIsD,gBAAgB,CAACtD,UAAD,EAAauD,WAAW,CAACC,MAAzB,CAAhB,IAAoDD,WAAW,CAACE,IAAhE,IAAwEN,IAAI,YAAYI,WAAW,CAACE,IAAxG,EAA8G;AAC1G,aAAO;AAAEJ,QAAAA,IAAI,EAAE,MAAR;AAAgBK,QAAAA,KAAK,EAAE;AAAvB,OAAP;AACH,KAFD,MAEO,IAAIJ,gBAAgB,CAACtD,UAAD,EAAa2B,GAAG,CAACnD,SAAjB,CAAhB,IAA+C+E,WAAW,CAACI,OAA3D,IAAsER,IAAI,YAAYI,WAAW,CAACI,OAAtG,EAA+G;AAClH,aAAO;AAAEN,QAAAA,IAAI,EAAE,SAAR;AAAmBK,QAAAA,KAAK,EAAE;AAA1B,OAAP;AACH,KAFM,MAEA,IAAIH,WAAW,CAACK,MAAZ,IAAsBT,IAAI,YAAYI,WAAW,CAACK,MAAtD,EAA8D;AACjE,aAAO;AAAEP,QAAAA,IAAI,EAAE,SAAR;AAAmBK,QAAAA,KAAK,EAAE;AAA1B,OAAP;AACH,KAFM,MAEA,IAAIJ,gBAAgB,CAACtD,UAAD,EAAauD,WAAW,CAACK,MAAzB,CAAhB,IAAoDL,WAAW,CAACM,QAAhE,IAA4EV,IAAI,YAAYI,WAAW,CAACM,QAA5G,EAAsH;AACzH,aAAO;AAAER,QAAAA,IAAI,EAAE,MAAR;AAAgBK,QAAAA,KAAK,EAAE,KAAvB;AAA8BI,QAAAA,KAAK,EAAE,KAAKC,YAAL,CAAkBZ,IAAlB;AAArC,OAAP;AACH,KAFM,MAEA,IAAIG,gBAAgB,CAACtD,UAAD,EAAauD,WAAW,CAACS,UAAzB,CAApB,EAA0D;AAC7D,aAAO;AAAEX,QAAAA,IAAI,EAAE,QAAR;AAAkBK,QAAAA,KAAK,EAAE,KAAzB;AAAgCI,QAAAA,KAAK,EAAE,KAAKC,YAAL,CAAkBZ,IAAlB;AAAvC,OAAP;AACH,KAFM,MAEA,IAAIG,gBAAgB,CAACtD,UAAD,EAAauD,WAAW,CAACU,MAAzB,CAAhB,IAAoDV,WAAW,CAACC,MAAhE,IAA0EL,IAAI,YAAYI,WAAW,CAACC,MAA1G,EAAkH;AACrH,aAAO;AAAEH,QAAAA,IAAI,EAAE,SAAR;AAAmBK,QAAAA,KAAK,EAAE;AAA1B,OAAP;AACH,KAFM,MAEA,IAAIJ,gBAAgB,CAACtD,UAAD,EAAauD,WAAW,CAACK,MAAzB,CAAhB,IAAoDL,WAAW,CAACW,KAAhE,IAAyEf,IAAI,YAAYI,WAAW,CAACW,KAAzG,EAAgH;AACnH,aAAO;AAAEb,QAAAA,IAAI,EAAE,QAAR;AAAkBK,QAAAA,KAAK,EAAE,KAAzB;AAAgCI,QAAAA,KAAK,EAAE,KAAKC,YAAL,CAAkBZ,IAAlB;AAAvC,OAAP;AACH;AACJ,GA9NH;;AAAA,SAgOEY,YAhOF,yBAgOeZ,IAhOf,EAgOqB;AACf,wBAAYA,IAAI,CAACgB,aAAjB;AAAgCC,MAAAA,MAAM,EAAEjB,IAAI,CAACkB;AAA7C;AACH,GAlOH;AAoOE;;;;;;;AApOF,SAyOEC,iBAzOF,8BAyOoBC,QAzOpB,EAyO8B;AACxB,QAAIA,QAAQ,CAACC,KAAT,CAAe,UAAf,CAAJ,EAAgC;AAC5B,aAAOD,QAAQ,CAACE,KAAT,CAAe,CAAf,EAAkBnD,WAAlB,EAAP;AACH,KAFD,MAEO;AACH,aAAO,IAAP;AACH;AACJ,GA/OH;AAiPE;;;;;;;;AAjPF,SAuPEoD,aAvPF,0BAuPgBzD,KAvPhB,EAuPuB0D,aAvPvB,EAuPsC;AAChC1D,IAAAA,KAAK,GAAG,KAAK2D,WAAL,CAAiB3D,KAAjB,CAAR;AAEA,QAAMC,MAAM,GAAG,EAAf;AACAA,IAAAA,MAAM,CAAChB,KAAP,GAAe,KAAKA,KAApB;AAEA,QAAIyE,aAAJ,EAAmBzD,MAAM,CAACK,SAAP,GAAmB,EAAnB;;AAGnB,SAAK,IAAIJ,GAAT,IAAgBF,KAAhB,EAAuB;AACnB,UAAIA,KAAK,CAAC4D,cAAN,CAAqB1D,GAArB,CAAJ,EAA+B;AAC3B,YAAM2C,KAAK,GAAG7C,KAAK,CAACE,GAAD,CAAnB;;AACA,YAAM2D,SAAS,GAAG,KAAKR,iBAAL,CAAuBnD,GAAvB,CAAlB;;AAEA,YAAI2D,SAAJ,EAAe;AACX,cAAIhB,KAAK,IAAIa,aAAb,EAA4BzD,MAAM,CAACK,SAAP,CAAiBuD,SAAjB,IAA8BhB,KAA9B;AAC/B,SAFD,MAEO,IAAI3C,GAAG,KAAK,QAAZ,EAAsB;AACzB4D,UAAAA,MAAM,CAACC,MAAP,CAAc9D,MAAd,EAAsB4C,KAAtB;AACH,SAFM,MAEA,IAAI3C,GAAG,KAAK,UAAR,IAAsBA,GAAG,KAAK,UAAlC,EAA8C;AACjDD,UAAAA,MAAM,CAACC,GAAG,CAAC8D,OAAJ,CAAY,WAAZ,EAAyB,KAAzB,CAAD,CAAN,GAA0CnB,KAA1C;AACH;AACJ;AACJ;;AAtB+B,QAyBxB9D,UAzBwB,GAyBT,IAzBS,CAyBxBA,UAzBwB,EA2BhC;AACA;AACA;AACA;AACA;;AAEA,WAAOkB,MAAP;AACH,GAzRH;AA6RE;;;;;;;;AA7RF,SAmSE0D,WAnSF,wBAmSc3D,KAnSd,EAmSqB;AACf,WAAOlC,aAAa,CAACkC,KAAD,EAAQ,UAAA6C,KAAK,EAAI;AACjC,UAAIA,KAAK,YAAYnC,GAAG,CAACuD,IAArB,IAA6B,OAAOpB,KAAP,KAAkB,UAAnD,EAA+D;AAC3D,eAAOA,KAAP;AACH;AACJ,KAJmB,CAApB;AAKH,GAzSH;;AAAA,SA2SEqB,UA3SF,uBA2SaC,QA3Sb,EA2SuBC,QA3SvB,EA2SiC;AAC3B,QAAMC,WAAW,GAAG,KAAKtF,UAAL,CAAgBuF,qCAApC;AACA,QAAI,CAACD,WAAL,EAAkB;AAClB,QAAME,UAAU,GAAG,EAAnB;AAAA,QAAuBC,UAAU,GAAG,EAApC;;AAEA,SAAK,IAAIpC,IAAT,IAAiBiC,WAAjB,EAA8B;AAC1BE,MAAAA,UAAU,CAACnC,IAAD,CAAV,GAAmB+B,QAAQ,CAAC/B,IAAD,CAA3B;AACAoC,MAAAA,UAAU,CAACpC,IAAD,CAAV,GAAmBgC,QAAQ,CAAChC,IAAD,CAA3B;AACH;;AAED,SAAKqC,WAAL,CAAiBF,UAAjB,EAA6BC,UAA7B;AACH,GAtTH,EAwTA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAKE;;;;;;AAjXF,SAqXEC,WArXF,wBAqXcN,QArXd,EAqXwBnE,KArXxB,EAqX+B;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEE,QAAM0E,IAAI,GAAG/G,KAAK,CAACmG,MAAM,CAACY,IAAP,CAAYP,QAAZ,CAAD,EAAwBL,MAAM,CAACY,IAAP,CAAY1E,KAAZ,CAAxB,CAAlB;;AACA,yBAAgB0E,IAAhB,kHAAsB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,UAAbxE,GAAa;AAClB,UAAMyE,QAAQ,GAAGR,QAAQ,CAACjE,GAAD,CAAzB;AAAA,UAAgC0E,QAAQ,GAAG5E,KAAK,CAACE,GAAD,CAAhD;AACA,UAAIA,GAAG,KAAK,UAAZ,EAAwB;;AACxB,UAAI,CAACtC,OAAO,CAAC+G,QAAD,EAAWC,QAAX,CAAZ,EAAkC;AAC9B,YAAMf,SAAS,GAAG,KAAKR,iBAAL,CAAuBnD,GAAvB,CAAlB;;AACA,YAAI2D,SAAJ,EAAe;AAC7B;AACA;AACgB,eAAKgB,aAAL,CAAmBhB,SAAnB,EAA8Bc,QAA9B,EAAwCC,QAAxC;AACD,SAJD,MAIO;AAEH,cAAME,MAAM,GAAG,KAAKC,UAAL,CAAgB7E,GAAhB,CAAf;;AACA,cAAI4E,MAAJ,EAAY;AACR,gBAAMjC,KAAK,GAAG,KAAKc,WAAL,CAAiBiB,QAAjB,CAAd;;AACA,gBAAI,KAAKI,gBAAL,CAAsBC,KAA1B,EAAiC1E,OAAO,CAAC2E,GAAR,CAAYJ,MAAZ,EAAoBF,QAApB,EAA8B/B,KAA9B,EAFzB,CAGR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,iBAAKzE,GAAL,CAAS0G,MAAT,EAAiBjC,KAAjB;AACH;AACJ;AACJ;AACJ;AACJ,GAhbH;AAkbE;;;;;;;;AAlbF,SAwbEgC,aAxbF,0BAwbgBhB,SAxbhB,EAwb2BsB,UAxb3B,EAwbuCC,UAxbvC,EAwbmD;AAC7C,QAAID,UAAJ,EAAgB;AACZ,UAAI,KAAKH,gBAAL,CAAsBC,KAA1B,EAAiC1E,OAAO,CAAC2E,GAAR,iCAA0CrB,SAA1C;AACjC,WAAKzF,GAAL,CAASiH,EAAT,CAAYxB,SAAZ,EAAuBsB,UAAvB;AACH;;AAED,QAAI,KAAKH,gBAAL,CAAsBC,KAA1B,EAAiC1E,OAAO,CAAC2E,GAAR,iCAA0CrB,SAA1C;AACjC,SAAKzF,GAAL,CAASkH,EAAT,CAAYzB,SAAZ,EAAuBuB,UAAvB;AACH,GAhcH;AAkcE;;;;;;AAlcF,SAscEL,UAtcF,uBAscahF,IAtcb,EAscmB;AACb,QAAIA,IAAI,KAAK,WAAb,EAA0B;AACtBA,MAAAA,IAAI,GAAG,KAAP;AACH;;AACD,QAAMqC,IAAI,WAAS,KAAKmD,WAAL,CAAiBxF,IAAjB,CAAnB;;AACA,WAAO,KAAK3B,GAAL,CAASgE,IAAT,KAAkBA,IAAzB;AACH,GA5cH;AA8cE;;;;;;AA9cF,SAkdEoD,UAldF,uBAkdazF,IAldb,EAkdmB;AACb,QAAMqC,IAAI,WAAS,KAAKmD,WAAL,CAAiBxF,IAAjB,CAAnB;;AACA,WAAO,KAAK3B,GAAL,CAASgE,IAAT,KAAkBA,IAAzB;AACH,GArdH;AAudE;;;;;;;;AAvdF,SA6dEmD,WA7dF,wBA6dcE,GA7dd,EA6dmB;AACb,WAAO5H,UAAU,CAAC4H,GAAG,CAAC,CAAD,CAAJ,CAAV,GAAqBA,GAAG,CAACjC,KAAJ,CAAU,CAAV,CAA5B;AACH,GA/dH;;AAAA,SAieEkC,aAjeF,4BAiekB;AACZ,SAAKC,MAAL,IAAeC,KAAK,CAACC,mBAArB;;AAEA,QAAI,KAAKxH,EAAT,EAAa;AACT;AACAyH,MAAAA,YAAY,CAAC,IAAD,EAAO,KAAKzH,EAAZ,CAAZ;AACH,KAHD,MAGO,IAAI,KAAKD,GAAL,CAASC,EAAb,EAAiB;AACpB,WAAK0H,eAAL;AACH,KAFM,MAEA,IAAIrF,GAAG,CAACC,SAAR,EAAmB;AACtB;AACA,WAAKvC,GAAL,CAASkH,EAAT,CAAY,aAAZ,EAA2B,KAAKS,eAAhC,EAAiD,IAAjD,EAAuD;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAvD;AACH;AACJ,GA7eH;;AAAA,SA+eED,eA/eF,8BA+eoB;AACd,SAAK1H,EAAL,GAAU,KAAKD,GAAL,CAASC,EAAT,CAAY4H,GAAtB;AACA,SAAK5H,EAAL,CAAQ6H,OAAR,GAAkB,KAAK9H,GAAvB;AACA0H,IAAAA,YAAY,CAAC,IAAD,EAAO,KAAKzH,EAAZ,CAAZ;AACH,GAnfH;AAqfE;;;;;;AArfF,SAyfE8H,kBAzfF,+BAyfqBC,CAzfrB,EAyfwB;AAClB,QAAIC,KAAK,GAAG,KAAKjI,GAAL,CAASiI,KAArB;AAEA,QAAI,CAACA,KAAL,EAAY,OAAOD,CAAP;AACZ,QAAIC,KAAK,CAACA,KAAV,EAAiBA,KAAK,GAAGA,KAAK,CAACA,KAAd;AAEjB,QAAIC,KAAK,GAAC,CAAV;AAAA,QAAaC,CAAb;AAAA,QAAgBrE,IAAhB;;AAEA,SAAKqE,CAAC,GAAC,CAAP,EAAUA,CAAC,GAACF,KAAK,CAACG,MAAlB,EAA0BD,CAAC,EAA3B,EAA+B;AAC3BrE,MAAAA,IAAI,GAAGmE,KAAK,CAACE,CAAD,CAAZ;;AAEA,UAAIrE,IAAI,CAACtD,kBAAL,IAA2B0H,KAAK,OAAOF,CAA3C,EAA8C;AAC1C,eAAOG,CAAP;AACH;AACJ;;AAED,WAAOA,CAAP;AACH,GA1gBH;AA4gBE;;;;;;;;AA5gBF,SAkhBEE,mBAlhBF,gCAkhBsB1G,IAlhBtB,EAkhB4B2G,eAlhB5B,EAkhB6C;AAAA;;AACvC,QAAIH,CAAC,GAAC,CAAN;AAAA,QAASD,KAAK,GAAC,CAAf;AAEA9I,IAAAA,QAAQ,CAACmJ,OAAT,CAAiB,KAAK3G,KAAL,CAAWH,QAA5B,EAAsC,UAAAiC,KAAK,EAAI;AAC3C,UAAM8E,YAAY,GAAG,MAAI,CAAC3E,oBAAL,CAA0BH,KAA1B,CAArB;;AAEA,UAAI8E,YAAY,IAAIA,YAAY,CAACxE,IAAb,KAAsBrC,IAAI,CAACqC,IAA/C,EAAqD;AACjD,YAAImE,CAAC,KAAKG,eAAV,EAA2B,OAAOJ,KAAP;AAC3BA,QAAAA,KAAK;AACR;AACJ,KAPD;AASA,WAAO,CAAC,CAAR;AACH,GA/hBH;AAiiBE;;;;;;;;;AAjiBF,SAwiBEO,YAxiBF,yBAwiBe9G,IAxiBf,EAwiBqB8C,KAxiBrB,EAwiB4BiE,KAxiB5B,EAwiBmCC,aAxiBnC,EAwiBkD;AAC5C,QAAMjC,MAAM,GAAG,KAAKC,UAAL,CAAgBhF,IAAI,CAACqC,IAArB,CAAf;;AACA,QAAI,CAAC0C,MAAL,EAAa;AAEb,QAAIjC,KAAJ,EAAWA,KAAK,CAACmE,eAAN,GAAwB,IAAxB;;AAEX,QAAIjH,IAAI,CAAC0C,KAAT,EAAgB;AACZ,UAAMwE,MAAM,GAAG,KAAKzB,UAAL,CAAgBzF,IAAI,CAACqC,IAArB,CAAf;;AACA,UAAI,CAAC6E,MAAL,EAAa;AAEb,UAAMC,YAAY,GAAG,KAAK9I,GAAL,CAAS6I,MAAT,OAAsB,EAA3C;;AAEA,UAAIF,aAAJ,EAAmB;AACf;AACAlE,QAAAA,KAAK,GAAGqE,YAAY,CAACC,MAAb,CAAoB,UAAAjF,IAAI;AAAA,iBAAIA,IAAI,KAAKW,KAAb;AAAA,SAAxB,CAAR;AACH,OAHD,MAGO,IAAIiE,KAAK,KAAKhH,SAAd,EAAyB;AAC5B;AACA+C,QAAAA,KAAK,GAAGqE,YAAY,CAACC,MAAb,CAAoB,UAAAjF,IAAI;AAAA,iBAAIA,IAAI,KAAKW,KAAb;AAAA,SAAxB,CAAR;AACAA,QAAAA,KAAK,GAAGA,KAAK,CAACuE,MAAN,CAAa,KAAKX,mBAAL,CAAyBK,KAAzB,EAAgC/G,IAAhC,CAAb,EAAoD,CAApD,EAAuDmC,IAAvD,CAAR;AACH,OAJM,MAIA;AACH;AACAW,QAAAA,KAAK,GAAGqE,YAAY,CAACG,MAAb,CAAoBxE,KAApB,CAAR;AACH;AACJ;;AAED,QAAI,KAAKmC,gBAAL,CAAsBC,KAA1B,EAAiC1E,OAAO,CAAC2E,GAAR,CAAYJ,MAAZ,EAAoBjC,KAApB;AAEjC,SAAKzE,GAAL,CAAS0G,MAAT,EAAiBjC,KAAjB;AACH,GApkBH;;AAAA,SAskBEyE,oBAtkBF,mCAskByB;AACnB;AACA,QAAI,KAAKlJ,GAAL,CAASmJ,oBAAb,EAAmC,OAAO,IAAP,CAFhB,CAInB;AACA;;AACA,QAAIjF,WAAW,CAACkF,SAAZ,IAAyB,KAAKpJ,GAAL,CAASqJ,MAAT,YAA2BnF,WAAW,CAACkF,SAApE,EAA+E,OAAO,IAAP,CAN5D,CAQnB;;AACA,QAAIlF,WAAW,CAACoF,QAAZ,IAAwB,KAAKtJ,GAAL,YAAoBkE,WAAW,CAACoF,QAA5D,EAAsE,OAAO,IAAP;AACzE,GAhlBH;;AAAA;AAAA,EAAoCnK,SAApC;AAqlBA;;;;;;;;AAOA,SAASoK,cAAT,CAAwBC,IAAxB,EAA8B;AAC5B,MAAIC,SAAS,GAAGD,IAAI,CAACA,IAArB;AAEA,MAAMxJ,GAAG,GAAG,IAAIsC,GAAG,CAACnD,SAAR,CAAkB;AAC1B;AACA;AACAuK,IAAAA,GAAG,EAAE;AAHqB,GAAlB,CAAZ;;AAMA,MAAI1J,GAAG,CAACD,OAAR,EAAiB;AACb;AACA4J,IAAAA,WAAW,CAACC,gBAAZ,CAA6B5J,GAAG,CAACD,OAAJ,CAAY8H,GAAzC,EAA8C2B,IAA9C;AACH,GAHD,MAGO;AACH;AACA,QAAM5I,MAAM,GAAG6B,QAAQ,CAACoH,aAAT,CAAuB,KAAvB,CAAf;AACAF,IAAAA,WAAW,CAACC,gBAAZ,CAA6BhJ,MAA7B,EAAqC4I,IAArC;AACAxJ,IAAAA,GAAG,CAACyJ,SAAJ,GAAgBA,SAAS,YAAYK,WAArB,GAAmCL,SAAnC,GAA+C7I;AAAO;AAAtE;AACH;;AAEDZ,EAAAA,GAAG,CAACQ,kBAAJ,GAAyB,IAAzB;AACAiJ,EAAAA,SAAS,CAAC3B,OAAV,GAAoB9H,GAApB,CApB4B,CAsB5B;AACA;;AACAA,EAAAA,GAAG,CAACwJ,IAAJ,GAAWC,SAAX;AAEA,SAAOzJ,GAAP;AACD","sourcesContent":["//import ReactDOM from 'react-dom';\nimport { l } from './index'\n//import React from 'react';\nimport { Component, Children, cloneElement } from 'react';\nimport EXTRenderer from './ExtRenderer.js'\nimport union from 'lodash.union';\nimport isEqual from 'lodash.isequal';\nimport capitalize from 'lodash.capitalize'\nimport cloneDeepWith from 'lodash.clonedeepwith';\nimport { renderWhenReady } from '..';\n\nimport { globalRoot } from './index'\n\nvar count = 0\n\nexport class ExtJSComponent extends Component {\n\n  constructor(element) {\n    super(element)\n    this.cmp = null;\n    this.el = null;\n\n    this.reactProps = {}\n    this.reactChildren = {}\n    this.reactElement = {}\n    this._getReactStuff(element)\n\n    this.rawConfigs = this._getConfig()\n    this.rawConfigs.$createdByExtReact = true\n\n    if(this.isRootContainer) {\n      this.rawConfigs.ExtReactRoot = true\n      this.cmp = new this.extJSClass(this.rawConfigs)\n      l(`ExtJSComponent: constructor ROOT, element: ${this.target}, xtype: ${this.xtype} (this.rawConfig, this.cmp, this)`, this.rawConfig, this.cmp, this)\n    }\n    else {\n      l(`ExtJSComponent: constructor NOTROOT, element: ${this.target}, xtype: ${this.xtype} (this.rawConfig, this)`, this.rawConfig, this)\n    }\n  }\n\n  componentWillMount() {\n    l(`ExtJSComponent: componentWillMount`)\n  }\n\n  componentDidMount() {\n    l(`ExtJSComponent: componentDidMount, element: ${this.target}, call EXTRenderer.createContainer`)\n    this._mountNode = EXTRenderer.createContainer(this.cmp)\n    //l(`ExtJSComponent: componentDidMount, element: ${this.target}, call EXTRenderer.updateContainer`)\n    l(`ExtJSComponent: componentDidMount (reactChildren, _mountNode) call EXTRenderer.updateContainer`,this.reactChildren,this._mountNode)\n    EXTRenderer.updateContainer(this.reactChildren, this._mountNode, this)\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.isRootContainer) {\n      l(`ExtJSComponent: componentDidUpdate, call EXTRenderer.updateContainer, element: ${this.target}`)\n      EXTRenderer.updateContainer(this.reactChildren, this._mountNode, this);\n    }\n  }\n\n  componentWillUnmount() {\n    l(`ExtJSComponent: componentWillUnmount, call EXTRenderer.updateContainer, element: ${this.target}`)\n    EXTRenderer.updateContainer(null, this._mountNode, this);\n  }\n\n  render() {\n    l('render')\n    return null\n  }\n\n  _getReactStuff(element) {\n    /*******reactElement */\n    if (element.children == undefined || element.children == false ) {\n      for (var prop in element) {\n        if (prop != 'children') {\n          this.reactProps[prop] = element[prop];\n        }\n      }\n    }\n    else {\n      this.reactChildren = element.children\n      if (element.props == undefined) {\n        for (var prop in element) {\n          if (prop != 'children') {\n            this.reactProps[prop] = element[prop];\n          }\n        }\n      }\n      else {\n        this.reactProps = element.props\n      }\n    }\n    this.reactElement.props = this.reactProps\n    this.reactElement.children = this.reactChildren\n  }\n\n  _getConfig() {\n    var config = {}\n    config.xtype = this.xtype\n    var props = this.reactProps\n    for (var key in props) {\n      //if (key == 'defaults') { debugger }\n      if(key.substr(0,2) === 'on') {\n        if (props[key] != undefined) {\n          var event = key.substr(2).toLowerCase()\n          if (config.listeners == undefined) {\n            config.listeners = {}\n          }\n          config.listeners[event] = props[key]\n          //MetaData\n        }\n        else {\n          console.warn('function for ' + key + ' event is not defined')\n        }\n      }\n\n      else {\n        config[key] = props[key]\n\n      }\n    }\n\n    if (config['className'] != undefined) {\n      config['cls'] = config['cls'] + ' ' + config['className']\n    }\n    this._ensureResponsivePlugin(config);\n\n    if (this.isRootContainer) {\n      if (config['layout'] == undefined) {\n        config['layout'] = 'fit'\n        if (config['cls'] != undefined) {\n          config['cls'] = config['cls'] + ' ' + 'ExtReactRoot'\n        }\n        else {\n          config['cls'] = 'ExtReactRoot'\n        }\n      }\n      if (Ext.isClassic) {\n        config['height'] = '100%'\n        config['width'] = '100%'\n        var root = document.getElementsByClassName('reactroot')[0]\n        config.renderTo = root\n      }\n      else {\n        var root = document.getElementsByClassName('x-viewport-body-el')[0]\n        if(root == undefined) {\n          root = globalRoot[count]\n          count++\n          config['height'] = '100%'\n          config['width'] = '100%'\n        }\n        else {\n          config['fullscreen'] = true\n        }\n        config.renderTo = root\n      }\n      this.extJSConfig = config\n    }\n    return config\n  }\n\n  _ensureResponsivePlugin(config) {\n    if (config.responsiveConfig) {\n      const { plugins } = config;\n\n      if (plugins == null) {\n        config.plugins = 'responsive';\n      } else if (Array.isArray(plugins) && plugins.indexOf('responsive') === -1) {\n        plugins.push('responsive');\n      } else if (typeof plugins === 'string') {\n        if (plugins !== 'responsive') {\n          config.plugins = [plugins, 'responsive'];\n      }\n      } else if (!plugins.resposive) {\n        plugins.responsive = true;\n      }\n    }\n  }\n\n  /**\n   * Returns the Ext JS component instance\n   */\n  getHostNode() {\n    return this.el;\n  }\n\n  /**\n   * Returns the Ext JS component instance\n   */\n  getPublicInstance() {\n    return this.cmp;\n  }\n\n  _applyDefaults({ defaults, children }) {\n      if (defaults) {\n          return Children.map(children, child => {\n              if (child.type.prototype instanceof ExtJSComponent) {\n                  return cloneElement(child, { ...defaults, ...child.props })\n              } else {\n                  return child;\n              }\n          })\n      } else {\n          return children;\n      }\n  }\n\n  /**\n   * Determines whether a child element corresponds to a config or a container item based on the presence of a rel config or\n   * matching other known relationships\n   * @param {Ext.Base} item\n   */\n  _propForChildElement(item) {\n      if (item.config && item.config.rel) {\n          if (typeof item.config.rel === 'string') {\n              return { name: item.config.rel }\n          } else {\n              return item.config.rel;\n          }\n      }\n\n      const { extJSClass } = this;\n\n      if (isAssignableFrom(extJSClass, CLASS_CACHE.Button) && CLASS_CACHE.Menu && item instanceof CLASS_CACHE.Menu) {\n          return { name: 'menu', array: false };\n      } else if (isAssignableFrom(extJSClass, Ext.Component) && CLASS_CACHE.ToolTip && item instanceof CLASS_CACHE.ToolTip) {\n          return { name: 'tooltip', array: false };\n      } else if (CLASS_CACHE.Column && item instanceof CLASS_CACHE.Column) {\n          return { name: 'columns', array: true };\n      } else if (isAssignableFrom(extJSClass, CLASS_CACHE.Column) && CLASS_CACHE.CellBase && item instanceof CLASS_CACHE.CellBase) {\n          return { name: 'cell', array: false, value: this._cloneConfig(item) }\n      } else if (isAssignableFrom(extJSClass, CLASS_CACHE.WidgetCell)) {\n          return { name: 'widget', array: false, value: this._cloneConfig(item) }\n      } else if (isAssignableFrom(extJSClass, CLASS_CACHE.Dialog) && CLASS_CACHE.Button && item instanceof CLASS_CACHE.Button) {\n          return { name: 'buttons', array: true };\n      } else if (isAssignableFrom(extJSClass, CLASS_CACHE.Column) && CLASS_CACHE.Field && item instanceof CLASS_CACHE.Field) {\n          return { name: 'editor', array: false, value: this._cloneConfig(item) };\n      }\n  }\n\n  _cloneConfig(item) {\n      return { ...item.initialConfig, xclass: item.$className };\n  }\n\n  /**\n   * If the propName corresponds to an event listener (starts with \"on\" followed by a capital letter), returns the name of the event.\n   * @param {String} propName \n   * @param {String}\n   */\n  _eventNameForProp(propName) {\n      if (propName.match(/^on[A-Z]/)) {\n          return propName.slice(2).toLowerCase();\n      } else {\n          return null;\n      }\n  }\n\n  /**\n   * Creates an Ext config object for this specified props\n   * @param {Object} props\n   * @param {Boolean} [includeEvents] true to convert on* props to listeners, false to exclude them\n   * @private\n   */\n  _createConfig(props, includeEvents) {\n      props = this._cloneProps(props);\n\n      const config = {};\n      config.xtype = this.xtype\n\n      if (includeEvents) config.listeners = {};\n\n\n      for (let key in props) {\n          if (props.hasOwnProperty(key)) {\n              const value = props[key];\n              const eventName = this._eventNameForProp(key);\n\n              if (eventName) {\n                  if (value && includeEvents) config.listeners[eventName] = value;\n              } else if (key === 'config') {\n                  Object.assign(config, value);\n              } else if (key !== 'children' && key !== 'defaults') {\n                  config[key.replace(/className/, 'cls')] = value;\n              }\n          }\n      }\n\n\n      const { extJSClass } = this;\n\n      //need this???\n      // if (isAssignableFrom(extJSClass, CLASS_CACHE.Column) && typeof config.renderer === 'function' && CLASS_CACHE.RendererCell) {\n      //     config.cell = config.cell || {};\n      //     config.cell.xtype = 'renderercell';\n      // }\n\n      return config;\n  }\n\n\n\n  /**\n   * Cloning props rather than passing them directly on as configs fixes issues where Ext JS mutates configs during\n   * component initialization.  One example of this is grid columns get $initParent added when the grid initializes.\n   * @param {Object} props\n   * @private\n   */\n  _cloneProps(props) {\n      return cloneDeepWith(props, value => {\n          if (value instanceof Ext.Base || typeof(value) === 'function') {\n              return value;\n          }\n      })\n  }\n\n  _rushProps(oldProps, newProps) {\n      const rushConfigs = this.extJSClass.__ExtReactUpdateConfigsBeforeChildren;\n      if (!rushConfigs) return;\n      const oldConfigs = {}, newConfigs = {}\n\n      for (let name in rushConfigs) {\n          oldConfigs[name] = oldProps[name];\n          newConfigs[name] = newProps[name]\n      }\n\n      this._applyProps(oldConfigs, newConfigs);\n  }\n\n//   _isEquivalent(a, b) {\n//     // Create arrays of property names\n//     var aProps = Object.getOwnPropertyNames(a);\n//     var bProps = Object.getOwnPropertyNames(b);\n\n//     // If number of properties is different,\n//     // objects are not equivalent\n//     if (aProps.length != bProps.length) {\n//         return false;\n//     }\n\n//     for (var i = 0; i < aProps.length; i++) {\n//         var propName = aProps[i];\n\n//         // If values of same property are not equal,\n//         // objects are not equivalent\n//         if (a[propName] !== b[propName]) {\n//             return false;\n//         }\n//     }\n\n//     // If we made it this far, objects\n//     // are considered equivalent\n//     return true;\n// }\n\n// _shallowEqual(objA, objB) {\n//   if (objA === objB) {\n//     return true;\n//   }\n\n//   if (typeof objA !== 'object' || objA === null ||\n//       typeof objB !== 'object' || objB === null) {\n//     return false;\n//   }\n\n//   var keysA = Object.keys(objA);\n//   var keysB = Object.keys(objB);\n\n//   if (keysA.length !== keysB.length) {\n//     return false;\n//   }\n\n//   // Test for A's keys different from B.\n//   var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB);\n//   for (var i = 0; i < keysA.length; i++) {\n//     if (!bHasOwnProperty(keysA[i]) || objA[keysA[i]] !== objB[keysA[i]]) {\n//       return false;\n//     }\n//   }\n\n//   return true;\n// }\n\n\n\n\n  /**\n   * Calls config setters for all react props that have changed\n   * @private\n   */\n  _applyProps(oldProps, props) {\n\n    // if (this._shallowEqual(oldProps, props)) {\n    //   console.log('*****************************************************************same'); \n    //   return\n    // }\n    // else {\n    //   console.log('*****************************************************************not same'); \n    // }\n\n    // var oldP = JSON.stringify(oldProps)\n    // var newP = JSON.stringify(props)\n\n    // if (oldP == newP) {\n    //   console.log('*****************************************************************same'); \n    //   return\n    // }\n    // else {\n    //   console.log('*****************************************************************not same'); \n    // }\n\n    // if (JSON.stringify(oldProps) == JSON.stringify(props)) {\n    //   alert('same'); // gives true\n    //   return\n    // }\n\n      const keys = union(Object.keys(oldProps), Object.keys(props));\n      for (let key of keys) {\n          const oldValue = oldProps[key], newValue = props[key];\n          if (key === 'children') continue;\n          if (!isEqual(oldValue, newValue)) {\n              const eventName = this._eventNameForProp(key);\n              if (eventName) {\n//                console.log('*****************************************************************eventName')\n//                console.log(eventName)\n                this._replaceEvent(eventName, oldValue, newValue);\n              } else {\n\n                  const setter = this._setterFor(key);\n                  if (setter) {\n                      const value = this._cloneProps(newValue);\n                      if (this.ExtReactSettings.debug) console.log(setter, newValue, value)\n                      // if (key == 'theme') {\n                      //   Ext.thechart = this.cmp\n                      //   console.log('*****************************************************************setter')\n                      //   console.log(this.cmp.xtype + ' - ' + setter + ' - ' + value) \n                      //   //console.log(this.cmp)\n                      //   //console.log('*****************************************************************value')\n                      //   //console.log(key)\n                      //   //console.log(value)\n                      //   // debugger\n                      //   //this.cmp.setTheme('Purple')\n                      //   //this.cmp.redraw()\n                      //  }\n                      this.cmp[setter](value)\n                  }\n              }\n          }\n      }\n  }\n\n  /**\n   * Detaches the old event listener and adds the new one.\n   * @param {String} eventName \n   * @param {Function} oldHandler \n   * @param {Function} newHandler \n   */\n  _replaceEvent(eventName, oldHandler, newHandler) {\n      if (oldHandler) {\n          if (this.ExtReactSettings.debug) console.log(`detaching old listener for ${eventName}`);\n          this.cmp.un(eventName, oldHandler);\n      }\n\n      if (this.ExtReactSettings.debug) console.log(`attaching new listener for ${eventName}`);\n      this.cmp.on(eventName, newHandler);\n  }\n\n  /**\n   * Returns the name of the setter method for a given prop.\n   * @param {String} prop\n   */\n  _setterFor(prop) {\n      if (prop === 'className') {\n          prop = 'cls';\n      }\n      const name = `set${this._capitalize(prop)}`;\n      return this.cmp[name] && name;\n  }\n\n  /**\n   * Returns the name of a getter for a given prop.\n   * @param {String} prop\n   */\n  _getterFor(prop) {\n      const name = `get${this._capitalize(prop)}`;\n      return this.cmp[name] && name;\n  }\n\n  /**\n   * Capitalizes the first letter in the string\n   * @param {String} str\n   * @return {String}\n   * @private\n   */\n  _capitalize(str) {\n      return capitalize(str[0]) + str.slice(1);\n  }\n\n  _precacheNode() {\n      this._flags |= Flags.hasCachedChildNodes;\n\n      if (this.el) {\n          // will get here when rendering root component\n          precacheNode(this, this.el)\n      } else if (this.cmp.el) {\n          this._doPrecacheNode();\n      } else if (Ext.isClassic) {\n          // we get here when rendering child components due to lazy rendering\n          this.cmp.on('afterrender', this._doPrecacheNode, this, { single: true });\n      }\n  }\n\n  _doPrecacheNode() {\n      this.el = this.cmp.el.dom;\n      this.el._extCmp = this.cmp;\n      precacheNode(this, this.el)\n  }\n\n  /**\n   * Returns the child item at the given index, only counting those items which were created by ExtReact\n   * @param {Number} n\n   */\n  _toReactChildIndex(n) {\n      let items = this.cmp.items;\n\n      if (!items) return n;\n      if (items.items) items = items.items;\n\n      let found=0, i, item;\n\n      for (i=0; i<items.length; i++) {\n          item = items[i];\n\n          if (item.$createdByExtReact && found++ === n) {\n              return i;\n          }\n      }\n\n      return i;\n  }\n\n  /**\n   * Translates and index in props.children to an index within a config value that is an array.  Use\n   * this to determine the position of an item in props.children within the array config to which it is mapped.\n   * @param {*} prop\n   * @param {*} indexInChildren\n   */\n  _toArrayConfigIndex(prop, indexInChildren) {\n      let i=0, found=0;\n\n      Children.forEach(this.props.children, child => {\n          const propForChild = this._propForChildElement(child);\n\n          if (propForChild && propForChild.name === prop.name) {\n              if (i === indexInChildren) return found;\n              found++;\n          }\n      });\n\n      return -1;\n  }\n\n  /**\n   * Updates a config based on a child element\n   * @param {Object} prop The prop descriptor (name and array)\n   * @param {Ext.Base} value The value to set\n   * @param {Number} [index] The index of the child element in props.children\n   * @param {Boolean} [isArrayDelete=false] True if removing the item from an array\n   */\n  _mergeConfig(prop, value, index, isArrayDelete) {\n      const setter = this._setterFor(prop.name);\n      if (!setter) return;\n\n      if (value) value.$ExtReactConfig = true;\n\n      if (prop.array) {\n          const getter = this._getterFor(prop.name);\n          if (!getter) return;\n\n          const currentValue = this.cmp[getter]() || [];\n\n          if (isArrayDelete) {\n              // delete\n              value = currentValue.filter(item => item !== value);\n          } else if (index !== undefined) {\n              // move\n              value = currentValue.filter(item => item !== value);\n              value = value.splice(this._toArrayConfigIndex(index, prop), 0, item);\n          } else {\n              // append\n              value = currentValue.concat(value);\n          }\n      }\n\n      if (this.ExtReactSettings.debug) console.log(setter, value);\n\n      this.cmp[setter](value);\n  }\n\n  _ignoreChildrenOrder() {\n      // maintaining order in certain components, like Transition's container, can cause problems with animations, _ExtReactIgnoreOrder gives us a way to opt out in such scenarios\n      if (this.cmp._ExtReactIgnoreOrder) return true; \n\n      // moving the main child of a container with layout fit causes it to disappear.  Instead we do nothing, which\n      // should be ok because fit containers are not ordered\n      if (CLASS_CACHE.FitLayout && this.cmp.layout instanceof CLASS_CACHE.FitLayout) return true; \n\n      // When tab to the left of the active tab is removed, the left-most tab would always be selected as the tabs to the right are reinserted\n      if (CLASS_CACHE.TabPanel && this.cmp instanceof CLASS_CACHE.TabPanel) return true;\n  }\n}\n\n\n\n/**\n * Wraps a dom element in an Ext Component so it can be added as a child item to an Ext Container.  We attach\n * a reference to the generated Component to the dom element so it can be destroyed later if the dom element\n * is removed when rerendering\n * @param {Object} node A React node object with node, children, and text\n * @returns {Ext.Component}\n */\nfunction wrapDOMElement(node) {\n  let contentEl = node.node;\n\n  const cmp = new Ext.Component({ \n      // We give the wrapper component a class so that developers can reset css \n      // properties (ex. box-sizing: context-box) for third party components.\n      cls: 'x-react-element' \n  });\n  \n  if (cmp.element) {\n      // modern\n      DOMLazyTree.insertTreeBefore(cmp.element.dom, node);\n  } else {\n      // classic\n      const target = document.createElement('div');\n      DOMLazyTree.insertTreeBefore(target, node);\n      cmp.contentEl = contentEl instanceof HTMLElement ? contentEl : target /* text fragment or comment */;\n  }\n\n  cmp.$createdByExtReact = true;\n  contentEl._extCmp = cmp;\n\n  // this is needed for devtools when using dangerouslyReplaceNodeWithMarkup\n  // this not needed in fiber\n  cmp.node = contentEl;\n\n  return cmp;\n}"],"file":"ExtJSComponent.js"}