{"version":3,"sources":["../src/reactify.js"],"names":["l","ExtJSComponent","htmlComponent","settings","configure","ExtReactSettings","getTheHtmlClass","htmltype","htmlify2","target","htmlifiedClass","getTheClass","isRootContainer","xtype","extJSClass","Ext","ClassManager","getByAlias","Error","reactify2","toLowerCase","replace","reactifiedClass","reactify","undefined","$config","Configurator","console","warn"],"mappings":";;AAAA,SAASA,CAAT,QAAkB,SAAlB;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,aAAT,QAA8B,iBAA9B;AAEA,OAAO,IAAIC,QAAQ,GAAG,EAAf;AAEP,OAAO,SAASC,SAAT,CAAmBC,gBAAnB,EAAqC;AAC1CF,EAAAA,QAAQ,GAAGE,gBAAX;AACD;;AAED,SAASC,eAAT,CAAyBC,QAAzB,EAAmC;AACjC;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AACF;AADE,4BAEkB;AAAC,iBAAOA,QAAP;AAAgB,SAFnC,CAGF;AACA;AACA;AACA;AACA;;AAPE;;AAAA;AAAA,MAAqBL,aAArB;AAAA;AASD;;AAED,OAAO,SAASM,QAAT,CAAkBC,MAAlB,EAA0B;AAC/B,MAAIC,cAAc,GAAGJ,eAAe,CAACG,MAAD,CAApC;AACA,SAAOC,cAAP;AACD;;AAED,SAASC,WAAT,CAAqBC,eAArB,EAAsCC,KAAtC,EAA6CJ,MAA7C,EAAqD;AACnD;AACA,MAAIK,UAAU,GAAGC,GAAG,CAACC,YAAJ,CAAiBC,UAAjB,aAAsCJ,KAAtC,CAAjB;AACA,MAAI,CAACC,UAAL,EAAiB,MAAM,IAAII,KAAJ,uCAA6CL,KAA7C,kDAAN,CAHkC,CAInD;;AACA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AACE;AADF,4BAEwB;AAAC,iBAAOD,eAAP;AAAuB;AAFhD;AAAA;AAAA,4BAGmB;AAAC,iBAAOE,UAAP;AAAkB;AAHtC;AAAA;AAAA,4BAIyB;AAAE,iBAAOX,QAAP;AAAiB;AAJ5C;AAAA;AAAA,4BAKc;AAAC,iBAAOU,KAAP;AAAa;AAL5B;AAAA;AAAA,4BAMe;AAAC,iBAAOJ,MAAP;AAAc,SAN9B,CAM+B;AAC7B;;AAPF;;AAAA;AAAA,MAAqBR,cAArB;AAAA;AASD,C,CAED;;;AACA,OAAO,SAASkB,SAAT,CAAmBV,MAAnB,EAA2B;AAChC,MAAMI,KAAK,GAAGJ,MAAM,CAACW,WAAP,GAAqBC,OAArB,CAA6B,IAA7B,EAAmC,GAAnC,CAAd;AACArB,EAAAA,CAAC,sCAAoCS,MAApC,iBAAsDI,KAAtD,CAAD,CAFgC,CAIhC;;AACA,MAAIS,eAAe,GAAGX,WAAW,CAAC,KAAD,EAAQE,KAAR,EAAeJ,MAAf,CAAjC;AACA,SAAOa,eAAP;AACD;AAED,OAAO,SAASC,QAAT,CAAkBd,MAAlB,EAA0B;AAC/B;AAEA,MAAI,OAAOA,MAAP,KAAmB,UAAvB,EAAmC;AACjC;AACA;AACA,QAAIA,MAAM,CAACI,KAAP,IAAgBW,SAApB,EAA+B;AAC7B,UAAI,EAAEf,MAAM,CAACgB,OAAP,YAA0BV,GAAG,CAACW,YAAhC,CAAJ,EAAmD;AACnDC,QAAAA,OAAO,CAACC,IAAR,4DAAuEnB,MAAM,CAACgB,OAA9E;AACC;AACF;;AACD,WAAOhB,MAAM,CAACI,KAAd;AACD,GATD,MAUK,IAAIJ,MAAM,KAAK,UAAf,EAA2B;AAC9BT,IAAAA,CAAC,CAAC,6CAAD,CAAD;AACA,QAAMa,KAAK,GAAG,WAAd;AACA,QAAIS,eAAe,GAAGX,WAAW,CAAC,IAAD,EAAOE,KAAP,EAAcJ,MAAd,CAAjC;AACA,WAAOa,eAAP;AACD,GALI,MAMA;AACH,WAAOb,MAAP;AACD;AACF","sourcesContent":["import { l } from './index'\nimport { ExtJSComponent } from './ExtJSComponent';\nimport { htmlComponent } from './htmlComponent';\n\nexport var settings = {};\n\nexport function configure(ExtReactSettings) {\n  settings = ExtReactSettings;\n}\n\nfunction getTheHtmlClass(htmltype) {\n  // //clean up xtype stuff (have a method instead of a property) - ExtReactSettings does it correctly\n  // var extJSClass = Ext.ClassManager.getByAlias(`widget.${xtype}`);\n  // if (!extJSClass) throw new Error(`No Ext JS component with xtype \"${xtype}\" found.  Perhaps you're missing a package?`);\n  //what is target used for?? or, does it have 1 meaning here and another in ExtJSComponent.js?\n  return class extends htmlComponent {\n//     //static get source() {return 'ExtJS'}\n     get htmltype() {return htmltype}\n//     get extJSClass() {return extJSClass}\n//     get ExtReactSettings() { return settings }\n//     get type() {return type}\n//     get target() {return target} //original element passed from jsx\n//  //   constructor(props) { super(props) }\n  }\n}\n\nexport function htmlify2(target) {\n  var htmlifiedClass = getTheHtmlClass(target)\n  return htmlifiedClass\n}\n\nfunction getTheClass(isRootContainer, xtype, target) {\n  //clean up xtype stuff (have a method instead of a property) - ExtReactSettings does it correctly\n  var extJSClass = Ext.ClassManager.getByAlias(`widget.${xtype}`);\n  if (!extJSClass) throw new Error(`No Ext JS component with xtype \"${xtype}\" found.  Perhaps you're missing a package?`);\n  //what is target used for?? or, does it have 1 meaning here and another in ExtJSComponent.js?\n  return class extends ExtJSComponent {\n    //static get source() {return 'ExtJS'}\n    get isRootContainer() {return isRootContainer}\n    get extJSClass() {return extJSClass}\n    get ExtReactSettings() { return settings }\n    get xtype() {return xtype}\n    get target() {return target} //original element passed from jsx\n    //constructor(props) { super(props) }\n  }\n}\n\n//merge this into reactify\nexport function reactify2(target) {\n  const xtype = target.toLowerCase().replace(/_/g, '-')\n  l(`reactify.js: reactify2, target: ${target}, xtype: ${xtype}`)\n\n  //l(`reactify2 ${xtype}`)\n  var reactifiedClass = getTheClass(false, xtype, target)\n  return reactifiedClass\n}\n\nexport function reactify(target) {\n  //console.log('reactify ' + target)\n\n  if (typeof(target) === 'function') {\n    //check to make sure this is an Ext JS define\n    //this is a custom ExtJS class (like worldmap), it has to have an xtype to work\n    if (target.xtype == undefined) {\n      if (!(target.$config instanceof Ext.Configurator)) {\n      console.warn(`ExtReact: Custom Ext JS component defined with no xtype`,target.$config)\n      }\n    }\n    return target.xtype\n  }\n  else if (target === 'ExtReact') {\n    l('target is: ExtReact, return reactifiedClass')\n    const xtype = 'container'\n    var reactifiedClass = getTheClass(true, xtype, target)\n    return reactifiedClass\n  }\n  else {\n    return target\n  }\n}\n"],"file":"reactify.js"}