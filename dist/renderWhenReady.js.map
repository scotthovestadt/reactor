{"version":3,"sources":["../src/renderWhenReady.js"],"names":["React","launchQueue","renderWhenReady","Component","state","ready","Ext","isReady","done","componentWillMount","push","render","props","onReady","queued","setState"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,IAAMC,WAAW,GAAG,EAApB;AAEA;;;;;;AAKA,eAAe,SAASC,eAAT,CAAyBC,SAAzB,EAAoC;AAAA;;AAEjD;AAAA;AAAA;AAAA;;AAGE,uCAAc;AAAA;;AACZ;AACA,YAAKC,KAAL,GAAa;AACXC,QAAAA,KAAK,EAAEC,GAAG,CAACC,OADA;AAEXC,QAAAA,IAAI,EAAE;AAFK,OAAb;AAFY;AAMb;;AATH;;AAAA,WAWEC,kBAXF,iCAWuB;AACnB,UAAI,CAAC,KAAKL,KAAL,CAAWC,KAAhB,EAAuB;AACrBJ,QAAAA,WAAW,CAACS,IAAZ,CAAiB,IAAjB;AACD;AACF,KAfH;;AAAA,WAiBEC,MAjBF,qBAiBW;AACP,UAAI,KAAKP,KAAL,CAAWC,KAAX,KAAqB,IAArB,IAA6B,KAAKD,KAAL,CAAWI,IAAX,IAAmB,KAApD,EAA4D;AAC1D,aAAKJ,KAAL,CAAWI,IAAX,GAAkB,IAAlB;AACA,eAAO,oBAAC,SAAD,EAAe,KAAKI,KAApB,CAAP;AACD,OAHD,MAIK;AACH,eAAO,KAAP;AACD;AACF,KAzBH;;AAAA;AAAA,IAA6CZ,KAAK,CAACG,SAAnD,+CAC4B,IAD5B;AA2BD;AAEDG,GAAG,CAACO,OAAJ,CAAY,YAAM;AAChB,wBAAmBZ,WAAnB,eAAgC;AAA3B,QAAIa,MAAM,GAAIb,WAAJ,IAAV;AACHa,IAAAA,MAAM,CAACC,QAAP,CAAgB;AAAEV,MAAAA,KAAK,EAAE;AAAT,KAAhB;AACD;AACF,CAJD","sourcesContent":["import React from 'react'\nconst launchQueue = []\n\n/**\n * Higher order function that returns a component that waits for a ExtReact to be ready before rendering.\n * @param {class} Component \n * @return {class}\n */\nexport default function renderWhenReady(Component) {\n\n  return class ExtReactRenderWhenReady extends React.Component {\n    static isExtJSComponent = true;\n\n    constructor() {\n      super();\n      this.state = {\n        ready: Ext.isReady,\n        done: false\n      }\n    }\n\n    componentWillMount() {\n      if (!this.state.ready) {\n        launchQueue.push(this);\n      }\n    }\n\n    render() {\n      if (this.state.ready === true && this.state.done == false ) {\n        this.state.done = true\n        return <Component {...this.props}/>\n      }\n      else {\n        return false\n      }\n    }\n  }\n}\n\nExt.onReady(() => {\n  for (let queued of launchQueue) {\n    queued.setState({ ready: true });\n  }\n})"],"file":"renderWhenReady.js"}